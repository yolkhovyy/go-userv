---
services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    volumes:
      - ./config/jaeger/ui-config.json:/etc/jaeger/jaeger-ui.json
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    ports:
      - 16686:16686    # Jaeger UI
    restart: unless-stopped
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus/config.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 9090:9090   # Prometheus UI
    restart: unless-stopped
    depends_on:
      otel-collector:
        condition: service_started

  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - ./config/loki/config.yml:/etc/loki/loki-config.yml
      - loki_data:/loki
    command: -config.file=/etc/loki/loki-config.yml
    ports:
      - 3100:3100   # Loki API
    restart: unless-stopped

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log   # Adjust log path as needed
      - ./config/promtail/config.yml:/etc/promtail/promtail-config.yml
    command: -config.file=/etc/promtail/promtail-config.yml
    restart: unless-stopped
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning1/:/etc/grafana/provisioning/
    ports:
      - 3000:3000   # Grafana UI
    restart: unless-stopped
    depends_on:
      - prometheus
      - loki
      - jaeger

volumes:
  prometheus_data:
  loki_data:
  grafana_data:
